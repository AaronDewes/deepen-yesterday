/*
 * Deepen API
 *
 * Deepen API
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateUserContent {
    /// 0: 未読 1: 既読
    #[serde(
        rename = "read_status",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub read_status: Option<Option<i64>>,
    /// 後で見るに追加しているかどうか
    #[serde(
        rename = "include_watch_list",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub include_watch_list: Option<Option<bool>>,
    /// 評価 0: 未評価 1: 役立つ 2: おもしろい 3: クール 4: キュート
    #[serde(
        rename = "evaluation",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub evaluation: Option<Option<i64>>,
    /// コンテンツにリンクしている任天堂イベントスケジュールをカレンダーに表示・通知するかどうか
    #[serde(
        rename = "is_event_schedule_subscribe",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub is_event_schedule_subscribe: Option<Option<bool>>,
}

impl UpdateUserContent {
    pub fn new() -> UpdateUserContent {
        UpdateUserContent {
            read_status: None,
            include_watch_list: None,
            evaluation: None,
            is_event_schedule_subscribe: None,
        }
    }
}
