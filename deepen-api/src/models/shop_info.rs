/*
 * Deepen API
 *
 * Deepen API
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ShopInfo : 販売ページの情報
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShopInfo {
    /// 販売ページのURL
    #[serde(rename = "url")]
    pub url: String,
    /// ソフト名. 対象がソフトの場合のみ. ソフト以外の場合は空文字
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// ソフトのアイコン. 対象がソフトの場合のみ. ソフト以外の場合は空文字
    #[serde(rename = "icon_url", skip_serializing_if = "Option::is_none")]
    pub icon_url: Option<String>,
    /// セール中かどうか
    #[serde(rename = "is_discount", skip_serializing_if = "Option::is_none")]
    pub is_discount: Option<bool>,
    /// 商品ID、ソフトID
    #[serde(rename = "application_id", skip_serializing_if = "Option::is_none")]
    pub application_id: Option<String>,
}

impl ShopInfo {
    /// 販売ページの情報
    pub fn new(url: String) -> ShopInfo {
        ShopInfo {
            url,
            name: None,
            icon_url: None,
            is_discount: None,
            application_id: None,
        }
    }
}
