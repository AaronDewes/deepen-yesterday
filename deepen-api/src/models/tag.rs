/*
 * Deepen API
 *
 * Deepen API
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Tag {
    /// タグID
    #[serde(rename = "id")]
    pub id: String,
    /// タグ名
    #[serde(rename = "name")]
    pub name: String,
    /// タグの種類 1: IP 2: ソフト名 3: ソフトシリーズ名 4: コンテンツ分類 5: プラットフォーム 6: コンテンツグループ 7: Nintendo Switch Online
    #[serde(rename = "tag_type")]
    pub tag_type: i64,
    /// アイコンのURL
    #[serde(rename = "icon_url")]
    pub icon_url: String,
    /// タグの種別がソフトだった時のソフトのプラットフォーム
    #[serde(rename = "platform")]
    pub platform: Vec<String>,
    /// 検索画面のヘッダー画像
    #[serde(rename = "search_header_image_url")]
    pub search_header_image_url: String,
    /// 検索画面のタグのカラー
    #[serde(rename = "search_view_tag_color")]
    pub search_view_tag_color: String,
    /// プラットフォームの文字列 プラットフォームが複数の場合は `/` で連結した文字列を返します プラットフォームが複数になるのは後継機とNintendo Switchだけです
    #[serde(rename = "platform_text")]
    pub platform_text: String,
}

impl Tag {
    pub fn new(
        id: String,
        name: String,
        tag_type: i64,
        icon_url: String,
        platform: Vec<String>,
        search_header_image_url: String,
        search_view_tag_color: String,
        platform_text: String,
    ) -> Tag {
        Tag {
            id,
            name,
            tag_type,
            icon_url,
            platform,
            search_header_image_url,
            search_view_tag_color,
            platform_text,
        }
    }
}
