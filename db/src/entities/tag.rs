//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "tag")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub name: String,
    pub icon: Option<String>,
    pub platform: Option<Vec<String>>,
    pub search_header_image: Option<String>,
    pub search_view_tag_color: Option<String>,
    pub platform_text: Option<String>,
    pub imported_at: DateTime,
    #[sea_orm(column_type = "JsonBinary")]
    pub raw_data: Json,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::content_item_tag::Entity")]
    ContentItemTag,
}

impl Related<super::content_item_tag::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ContentItemTag.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
