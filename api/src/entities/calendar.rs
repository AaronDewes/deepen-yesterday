//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use super::sea_orm_active_enums::AnimationType;
use super::sea_orm_active_enums::RepeatType;
use super::sea_orm_active_enums::SkinIp;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "calendar")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub skin_ip: Option<SkinIp>,
    pub animation_type: Option<AnimationType>,
    pub day: i32,
    pub month: i32,
    pub year: i32,
    pub repeat_type: Option<RepeatType>,
    pub date_color: Option<String>,
    pub animation: Option<String>,
    pub thumbnail: Option<String>,
    pub imported_at: DateTime,
    #[sea_orm(column_type = "JsonBinary")]
    pub raw_data: Json,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelatedEntity)]
pub enum RelatedEntity {}
